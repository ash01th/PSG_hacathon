{"ast":null,"code":"var _jsxFileName = \"D:\\\\aparnaa\\\\college\\\\javascript\\\\react\\\\chatbot\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onFileUpload\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  const handleDrop = acceptedFiles => {\n    setFiles(acceptedFiles); // Store selected files\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    files.forEach(file => formData.append(\"files\", file));\n    try {\n      setUploadStatus(\"Uploading...\");\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n\n      // Assuming the response contains the new conversation data\n      onFileUpload(response.data.newConversation);\n      setUploadStatus(\"Upload successful!\");\n    } catch (error) {\n      console.error(error);\n      setUploadStatus(\"Upload failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: handleDrop,\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        style: {\n          border: \"2px dashed #ccc\",\n          padding: \"20px\",\n          textAlign: \"center\",\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and drop files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Selected Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginTop: \"10px\",\n        padding: \"10px\",\n        backgroundColor: \"#4CAF50\",\n        color: \"white\"\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"etFB621AGTUHOrijBsd4buWnqVA=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Dropzone","axios","jsxDEV","_jsxDEV","FileUpload","onFileUpload","_s","files","setFiles","uploadStatus","setUploadStatus","handleDrop","acceptedFiles","handleUpload","formData","FormData","forEach","file","append","response","post","headers","data","newConversation","error","console","children","onDrop","getRootProps","getInputProps","style","border","padding","textAlign","cursor","fileName","_jsxFileName","lineNumber","columnNumber","length","marginTop","map","index","name","onClick","backgroundColor","color","_c","$RefreshReg$"],"sources":["D:/aparnaa/college/javascript/react/chatbot/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\n\r\nconst FileUpload = ({ onFileUpload }) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [uploadStatus, setUploadStatus] = useState(\"\");\r\n\r\n  const handleDrop = (acceptedFiles) => {\r\n    setFiles(acceptedFiles); // Store selected files\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    files.forEach((file) => formData.append(\"files\", file));\r\n\r\n    try {\r\n      setUploadStatus(\"Uploading...\");\r\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      // Assuming the response contains the new conversation data\r\n      onFileUpload(response.data.newConversation);\r\n      setUploadStatus(\"Upload successful!\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploadStatus(\"Upload failed.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dropzone onDrop={handleDrop}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            {...getRootProps()}\r\n            style={{\r\n              border: \"2px dashed #ccc\",\r\n              padding: \"20px\",\r\n              textAlign: \"center\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <p>Drag and drop files here, or click to select files</p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      {/* Display selected files */}\r\n      {files.length > 0 && (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h4>Selected Files:</h4>\r\n          <ul>\r\n            {files.map((file, index) => (\r\n              <li key={index}>{file.name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        onClick={handleUpload}\r\n        style={{\r\n          marginTop: \"10px\",\r\n          padding: \"10px\",\r\n          backgroundColor: \"#4CAF50\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        Upload\r\n      </button>\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}